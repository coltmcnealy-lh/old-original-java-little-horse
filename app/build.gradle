/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Stuff for Javalin
    implementation 'io.javalin:javalin:4.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4'
    implementation 'org.slf4j:slf4j-simple:1.7.31'

    // Stuff for Kafka
    implementation 'org.apache.kafka:kafka-clients:3.0.0'
    implementation 'org.apache.kafka:kafka-streams:3.0.0'

    // HTTP Client
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // Utils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}


application {
    // Define the main class for the application.
    mainClass = 'little.horse.App'
    executableDir = 'custom_bin_dir'
}

task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'little.horse.App'
  }
  archiveClassifier = "all"
  duplicatesStrategy = "exclude"
  from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
  with jar
}