// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lh_proto.proto

package io.littlehorse.proto;

public interface ThreadRunPbOrBuilder extends
    // @@protoc_insertion_point(interface_extends:lh_proto.ThreadRunPb)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>map&lt;string, .lh_proto.VariableValuePb&gt; variables = 1;</code>
   */
  int getVariablesCount();
  /**
   * <code>map&lt;string, .lh_proto.VariableValuePb&gt; variables = 1;</code>
   */
  boolean containsVariables(
      java.lang.String key);
  /**
   * Use {@link #getVariablesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.littlehorse.proto.VariableValuePb>
  getVariables();
  /**
   * <code>map&lt;string, .lh_proto.VariableValuePb&gt; variables = 1;</code>
   */
  java.util.Map<java.lang.String, io.littlehorse.proto.VariableValuePb>
  getVariablesMap();
  /**
   * <code>map&lt;string, .lh_proto.VariableValuePb&gt; variables = 1;</code>
   */

  io.littlehorse.proto.VariableValuePb getVariablesOrDefault(
      java.lang.String key,
      io.littlehorse.proto.VariableValuePb defaultValue);
  /**
   * <code>map&lt;string, .lh_proto.VariableValuePb&gt; variables = 1;</code>
   */

  io.littlehorse.proto.VariableValuePb getVariablesOrThrow(
      java.lang.String key);

  /**
   * <code>repeated .lh_proto.TaskRunPb active_task_runs = 2;</code>
   */
  java.util.List<io.littlehorse.proto.TaskRunPb> 
      getActiveTaskRunsList();
  /**
   * <code>repeated .lh_proto.TaskRunPb active_task_runs = 2;</code>
   */
  io.littlehorse.proto.TaskRunPb getActiveTaskRuns(int index);
  /**
   * <code>repeated .lh_proto.TaskRunPb active_task_runs = 2;</code>
   */
  int getActiveTaskRunsCount();
  /**
   * <code>repeated .lh_proto.TaskRunPb active_task_runs = 2;</code>
   */
  java.util.List<? extends io.littlehorse.proto.TaskRunPbOrBuilder> 
      getActiveTaskRunsOrBuilderList();
  /**
   * <code>repeated .lh_proto.TaskRunPb active_task_runs = 2;</code>
   */
  io.littlehorse.proto.TaskRunPbOrBuilder getActiveTaskRunsOrBuilder(
      int index);

  /**
   * <code>.lh_proto.LHStatusPb status = 3;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.lh_proto.LHStatusPb status = 3;</code>
   * @return The status.
   */
  io.littlehorse.proto.LHStatusPb getStatus();

  /**
   * <code>string current_node = 4;</code>
   * @return Whether the currentNode field is set.
   */
  boolean hasCurrentNode();
  /**
   * <code>string current_node = 4;</code>
   * @return The currentNode.
   */
  java.lang.String getCurrentNode();
  /**
   * <code>string current_node = 4;</code>
   * @return The bytes for currentNode.
   */
  com.google.protobuf.ByteString
      getCurrentNodeBytes();

  /**
   * <code>string thread_spec_name = 5;</code>
   * @return The threadSpecName.
   */
  java.lang.String getThreadSpecName();
  /**
   * <code>string thread_spec_name = 5;</code>
   * @return The bytes for threadSpecName.
   */
  com.google.protobuf.ByteString
      getThreadSpecNameBytes();
}
